what is good code:

1. Readable code

2. Scalable code(using of big O notation to scale the code)
 - We use the number of operations an algorithm takes to run rather than the time the algorithm takes to run.
 - We do not use TIME, since time is a factor affecting the CPU and not an algorithm.


 Rules of big O notation
 1. Worst case Scenario
  - Always think of worst case scenario
 2. Remove constant
  - Say the Big O of a particular function is O(1 + n/2 + 100), we reduce it to O(n) we drop the constants.
 3.  Different terms for inputs
 example code:
 function compressBoxesTwice(boxes, boxes2) {
    boxes.forEach(function(boxes) {
        console.log(boxes)
    });

    boxes2.forEach(function(boxes) {
        console.log(boxes);
    });
 }

 here we are temped to say that the Big O of the function is O(n). However with the
 rule that we are having we have state the two Big O's both for the boxes and boxes2
 Hence this would be O(a + b) a - boxes and b - boxes2
